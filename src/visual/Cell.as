package visual{	import flash.display.*;	import flash.events.*;	import flash.text.*;	import ui.*;	import flash.filters.*;	/**	 * Cell of Table holds a default styled TextField used as a label.	 * If set with setAnchor() will responsed to the mouse events.	 */	public class Cell extends Sprite {				public var myText:TextField;		private var myAnchor:Anchor;		private var myTextColor:uint;				private static var glowFilter:GlowFilter = new GlowFilter(0xffffff, 1, 5, 5);				/**		 * @param	txt       The string to show.		 * @param	cellStyle Override the default cell style.		 */		function Cell(txt:String = "", cellStyle:Object = null) {						myTextColor	= Global.config.system.textColor; // default style						if (cellStyle) {				if (cellStyle.textColor)					myTextColor = cellStyle.textColor;			}						myText = UIUtil.createLabel(0, 0, txt);			addChild(myText);						mouseChildren = false;			mouseEnabled = false;		}				/**		 * Set the anchor to this cell, so the cell will remember the anchor.		 * It also make this cell to response MOUSE_OVER and MOUSE_OUT events.		 * @param	anchor	The anchor related with this cell.		 */		public function setAnchor(anchor:Anchor):void {			myAnchor = anchor; // remember my anchor			mouseEnabled = true;			addEventListener(MouseEvent.MOUSE_OVER, mOver);			addEventListener(MouseEvent.MOUSE_OUT, mOut);		}						/**		 * The right middle (x,y) position of this cell in Table's cordinate space.		 * Used by Anchor.		 */		public function get rightMiddle() : Object {			return { x : (parent.x + x + width), y : (parent.y + y + (height >> 1)) };		}				public function get text():String {			return myText.text;		}				/**		 * Event Handlers of MOUSE_OVER.		 * @param	e MouseEvent		 */		private function mOver(e:MouseEvent):void {			myText.filters = [glowFilter];			myText.textColor = 0x000000;		}				/**		 * Event Handlers of MOUSE_OUT.		 * @param	e MouseEvent		 */		private function mOut(e:MouseEvent):void {			myText.filters = [];			myText.textColor = myTextColor;		}			}}